// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ColumnType {
  STRING
  NUMBER
  DATE
  BOOLEAN
}

model User {
  id        String       @id @default(cuid())
  email     String       @unique
  firstName String
  lastName  String
  password  String
  datasets  Dataset[]
  charts    SavedChart[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Dataset {
  id          String          @id @default(cuid())
  name        String
  user        User            @relation(fields: [userId], references: [id])
  userId      String
  columns     DatasetColumn[]
  rows        DatasetRow[]
  savedCharts SavedChart[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@index([userId])
}

model DatasetColumn {
  id           String        @id @default(cuid())
  name         String
  type         ColumnType
  dataset      Dataset       @relation(fields: [datasetId], references: [id], onDelete: Cascade)
  datasetId    String
  datasetCells DatasetCell[]

  @@index([datasetId])
}

model DatasetRow {
  id        String        @id @default(cuid())
  dataset   Dataset       @relation(fields: [datasetId], references: [id], onDelete: Cascade)
  datasetId String
  cells     DatasetCell[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([datasetId])
}

model DatasetCell {
  id        String        @id @default(cuid())
  row       DatasetRow    @relation(fields: [rowId], references: [id], onDelete: Cascade)
  rowId     String
  column    DatasetColumn @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId  String
  value     String
  updatedAt DateTime      @updatedAt

  @@index([rowId])
  @@index([columnId])
}

model SavedChart {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  dataset   Dataset  @relation(fields: [datasetId], references: [id], onDelete: Cascade)
  datasetId String
  chartType String //e.g., "bar", "line", "pie"
  xAxis     String //name of the column for x-axis
  yAxis     String //name of the column for y-axis
  title     String? //optional title for the chart
  options   Json? //e.g., { "color": "blue", "stacked": true }
  groupBy   String? //name of the column to group by, if applicable
  filters   Json? //e.g., { "Category": "Electronics" }
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([datasetId])
}
